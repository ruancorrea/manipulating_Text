<style>
    .btn-dark{
        width: 180px;
        display: block;
        margin-left: auto;
        margin-right: auto;
        font-size: 14px;;
    }
    .table{
        border-radius: 1%;
    }

    #cabc{
        position: absolute;
        left: 40%;
        font-weight: 100;
        font: bold 20px serif;
        transform: translate(-50%, -50%);
    }
</style>
<div id="app-5">
    <br>
    <h3 style="font: normal 4em Verdana;" class="mt-1">Manipulating Text</h3>
    <h4 class="mt-5" id='cabc'></h4><br><br><br>
  <!--  <div class="row mt-5">
        <div class="card bg-black mt-5" style="color: black;" >
            <div class="card-body">
        <p>It's a online tool developed to assist in the manipulation of texts of easy use and great utility. The idealization of the tool from the context of the reactivity applied in the text input box, through the Vue.js Framerwork, is one of the points to be highlighted, since from that, we have, spontaneously, the result of each manipulation made in the inserted text.</p>
            </div>
        </div>
    </div> --->

    <div class="card rounded mt-5" id='areadetexto' style="background: #CDC5BF !important;">
        <input style="display: block; margin-left: auto;" class="btn btn-warning btn-sm" id='copia' v-on:click="copy" type="button" value="Copy?">
        <textarea style="background-color: white;" class="form-control" v-model="texto" ref="texto" id="exampleFormControlTextarea1" rows="15" placeholder=" Enter your text here"></textarea>
        <div class="input-group mb-3">
            <input class="btn btn-dark" v-on:click="texto = texto.toUpperCase()" type="button" value="Uppercase">
            <input class="btn btn-dark" v-on:click="texto = titleize()" type="button" value="1ª letter per word">
            <input class="btn btn-dark" v-on:click="texto = texto.toLowerCase()" type="button" value="Lowercase">
            <input class="btn btn-dark" v-on:click="texto = quebraPalavra()" type="button" value="Line break per word">
            <input class="btn btn-dark" v-on:click="reverseMessage" type="button" value="Invert text">
            <input class="btn btn-dark" v-on:click="texto = fraseOne()" type="button" value="1ª letter per phrase">
            <input class="btn btn-dark" v-on:click="texto = espacamentoPalavra()" type="button" value="Word spacing">
            <input class="btn btn-dark" v-on:click="texto = semLinhaVazia()" type="button" value="No empty line">
            <input class="btn btn-dark" v-on:click="texto = semEspacoVazio()" type="button" value="No empty space">
            <input class="btn btn-dark" v-on:click="texto = semEspaco()" type="button" value="No space">
            <input class="btn btn-dark" v-on:click="texto = quebraFrase()" type="button" value="Line break per phr">
            <input class="btn btn-dark" v-on:click="texto = ''" type="button" value="Erase text">
        </div>
    </div>
</div>

<!--- <div class="row">
    <div class="card bg-black mt-3" style="color: black;" >
        <div class="card-body">
        <p>It's a online tool developed to assist in the manipulation of texts of easy use and great utility. The idealization of the tool from the context of the reactivity applied in the text input box, through the Vue.js Framerwork, is one of the points to be highlighted, since from that, we have, spontaneously, the result of each manipulation made in the inserted text.</p>
        </div>
    </div>
</div>

<div class="row">
    <div class="card bg-black mt-3" style="color: black;" >
        <div class="card-body">
        <p>It's a online tool developed to assist in the manipulation of texts of easy use and great utility. The idealization of the tool from the context of the reactivity applied in the text input box, through the Vue.js Framerwork, is one of the points to be highlighted, since from that, we have, spontaneously, the result of each manipulation made in the inserted text.</p>
        </div>
    </div>
</div> --->

<div class="container">
<br class="mt-4" id="whatis">
<br><br>
<h3 class="mt-4">What is that?</h3>
<p>It's a online tool developed to assist in the manipulation of texts of easy use and great utility. The idealization of the tool from the context of the reactivity applied in the text input box, through the <a style="color: chocolate;" href="https://vuejs.org/">Vue.js Framerwork</a>, is one of the points to be highlighted, since from that, we have, spontaneously, the result of each manipulation made in the inserted text.</p>
</div>

<!--- <div class="row">
<div class="card bg-black mt-3" style="color: black;" >
    <div class="card-body">
        <p>It's a online tool developed to assist in the manipulation of texts of easy use and great utility. The idealization of the tool from the context of the reactivity applied in the text input box, through the Vue.js Framerwork, is one of the points to be highlighted, since from that, we have, spontaneously, the result of each manipulation made in the inserted text.</p>
    </div>
</div>
</div> --->

<div class="container">
    <br class="mt-4" id="options">
    <br><br>
    <h3 class="mt-4">Options</h3>
    <p>Given the due options with its functionalities, it was tried as much as possible to simplify the usability, so that its use becomes as easy and simple as possible for the visitor. Based on this premise, it may be that, when manipulating the text, you may not find the desired result. That is, the text still finds something to be changed or some flaws that can be corrected. <a style="color: chocolate;" href="/#footer">In this case, keep in touch with the developer</a> (contact in the footer).</p>
</div>

<!--- <div class="row">
    <div class="card bg-black mt-3" style="color: black;" >
        <div class="card-body">
        <p>It's a online tool developed to assist in the manipulation of texts of easy use and great utility. The idealization of the tool from the context of the reactivity applied in the text input box, through the Vue.js Framerwork, is one of the points to be highlighted, since from that, we have, spontaneously, the result of each manipulation made in the inserted text.</p>
        </div>
    </div>
</div> --->

<div class="container">
    <br class="mt-4" id="definitions">
    <br><br>
    <h3 class="mt-4">Definitions</h3>
    <p>Below is a table with a quick explanation that defines each text manipulation option on this platform.</p>
    <table class="table table-striped">
        <thead style="background: #CDC5BF !important;">
            <tr>
            <th scope="col">Option</th>
            <th scope="col">Function</th>
            </tr>
        </thead>
        <tbody>
            <tr>
            <th scope="row">Uppercase</th>
            <td>All text with uppercase letters.</td>
            </tr>
            <tr>
            <th scope="row">1ª letter per word</th>
            <td colspan="2">First letter of each word will be capitalized.</td>
            </tr>
            <tr>
            <th scope="row">Lowercase</th>
            <td colspan="3">All text with lowercase letters.</td>
            </tr>
            <tr>
            <th scope="row">Line break per word</th>
            <td colspan="4">With each word in the text, there will be a line break.</td>
            </tr>
            <tr>
            <th scope="row">Line break per phrase</th>
            <td colspan="5">With each phrase in the text, there will be a line break.</td>
            </tr>
            <tr>
            <th scope="row">Invert text</th>
            <td colspan="6">All text will be reversed backwards.</td>
            </tr>
            <tr>
            <th scope="row">1ª letter per phrase</th>
            <td colspan="7">Each sentence will have the first capital letter.</td>
            </tr>
            <tr>
            <th scope="row">Word spacing</th>
            <td colspan="8">All lines of lines that have no text are removed.</td>
            </tr>
            <tr>
            <th scope="row">No empty line</th>
            <td colspan="9">If you have two or more lines between each word / phrase, they will be removed.</td>
            </tr>
            <tr>
            <th scope="row">No empty space</th>
            <td colspan="10">If you have two or more spaces between each word / phrase, they will be removed.</td>
            </tr>
            <tr>
            <th scope="row">No space</th>
            <td colspan="11">All gaps are removed. Except after the period or continuity (.).</td>
            </tr>
            <th scope="row">Erase text</th>
            <td colspan="11">Deletes all inserted text.</td>
            </tr>
        </tbody>
    </table>
</div>

<!--- <div class="row">
    <div class="card bg-black mt-3" style="color: black;" >
        <div class="card-body">
        <p>It's a online tool developed to assist in the manipulation of texts of easy use and great utility. The idealization of the tool from the context of the reactivity applied in the text input box, through the Vue.js Framerwork, is one of the points to be highlighted, since from that, we have, spontaneously, the result of each manipulation made in the inserted text.</p>
        </div>
    </div>
</div> --->

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="js/texto.js"></script>

<script>
    var app5 = new Vue({      
        delimiters: ['${', '}'],

        el: '#app-5',
        data: {
            texto: "",
            words: ""
        },
        methods: {
            titleize : function () {
                var words = this.texto.toLowerCase().split(" ");
                for (var a = 0; a < words.length; a++) {
                    var w = words[a];
                    words[a] = w[0].toUpperCase() + w.slice(1);
                }
                return words.join(" ");
            },
            reverseMessage: function () {
                this.texto = this.texto.split('').reverse().join('')
            },
            fraseOne: function(){
                this.texto = this.texto.toLowerCase();
                var primeira = "";
                primeira = this.texto[0].toUpperCase(); // = this.texto.toUpperCase();
                // console.log("primeira - " + primeira)

                for(var i=1; i<this.texto.length;i++){
                 //   console.log("string = " + primeira)

                    if(!alfabeto(this.texto[i])){
                      //  console.log("Entrou na vez = " + i + " string = " + primeira)
                        if(this.texto[i] == "\n" || this.texto[i] == "." || this.texto[i] == "!" || this.texto[i] == "?"){
                            while(!alfabeto(this.texto[i])){
                                primeira = primeira + this.texto[i];
                                i++;
                                if(i==this.texto.length){
                                    return primeira;
                                }
                            }
                        //    console.log("Saiu na vez = " + i + " string = " + primeira)                            
                            primeira = primeira +  this.texto[i].toUpperCase();
                        } else primeira = primeira + this.texto[i];
                    }else primeira = primeira + this.texto[i];
                }
                return primeira;
                //console.log("valor de i " + i + " tamanho do array " + this.texto.length)
            },
            quebraPalavra: function(){
                var newText = '';
                for(var i=0; i<this.texto.length; i++){
                    if(this.texto[i] == ' '){
                        newText += '\n'
                    }else newText += this.texto[i];
                }
                return newText;
            },
            quebraFrase: function(){
                var newText = '';
                for(var i=0; i<this.texto.length; i++){
                    if(this.texto[i] == '.'){
                        newText += '.';
                        i++;
                        while(this.texto[i]==' '){
                            i++;
                            if(i==this.texto.length){
                                return newText;
                            }
                        }

                        if(i==this.texto.length){
                                return newText;
                            }
                        if(this.texto[i+1]!='\n'){
                            newText += '\n'
                        }
                        newText += this.texto[i];
                    }else newText += this.texto[i];
                }
                return newText;
            },
            espacamentoPalavra: function(){
                var newText = '';
                for(var i=0; i<this.texto.length; i++){
                    if(this.texto[i] == '\n'){
                        newText += ' '
                    }else newText += this.texto[i];
                }
                return newText;
            },
            copy : function(){
                var copyTextarea = this.$refs.texto
        
                copyTextarea.select();
                document.execCommand('copy');
            },
            semLinhaVazia : function(){
                var newText = '';
                for(var i=0; i<this.texto.length; i++){
                    if(this.texto[i] == '\n'){
                        newText += this.texto[i];
                        i++;
                        while(this.texto[i] == '\n' && i<this.texto.length){
                            i++;
                        }
                        newText += this.texto[i];
                    }else newText += this.texto[i];
                }
                return newText;
            },
            semEspacoVazio : function(){
                var newText = '';
                for(var i=0; i<this.texto.length; i++){
                    if(this.texto[i] == ' '){
                        newText += this.texto[i];
                        i++;
                        while(this.texto[i] == ' '){
                            i++;
                            if(i==this.texto.length){
                                return newText;
                            }
                        }
                        newText += this.texto[i];
                    }else newText += this.texto[i];
                }
                return newText;
            },
            semEspaco : function(){
                var newText = '';
                for(var i=0; i<this.texto.length; i++){
                    if(this.texto[i] == ' '){
                        if(this.texto[i-1] == '.'){
                          newText += this.texto[i];  
                        }else newText += ''
                    }else newText += this.texto[i];
                }
                return newText;
            },

            letras : function(){
                var letras = 0 
                for(var i=0; i<this.texto.length; i++){
                    if(alfabeto(this.texto[i])){
                        letras += 1
                    }
                }
                return letras;
            }, 
            palavras : function() {
                var palavras = 0 
                for(var i=0; i<this.texto.length; i++){
                    if(alfabeto(this.texto[i])){
                        palavras +=1
                        while(alfabeto(this.texto[i])){
                            i++;
                        }
                    }
                }
                return palavras;
            }
        }
    })
</script>

<script>
    $('#copia').click(function(){
        var resposta = 'Copied!'
        $(this).val(resposta)
        $(this).attr('disabled', true);
    })
    $('#exampleFormControlTextarea1').bind('input propertychange', function(){
        var resposta = 'Copy?'
        $('#copia').val(resposta)
        $('#copia').attr('disabled', false);
        //console.log($(this).val())
    })
</script>

<script>
    var sentence = ["Online text editor and totally free.",
                    "This is an online platform, free and easy to use.",
                    "When entering the text, choose the option you want the magic to happen."
                    ]
    var part = 0;
    var part_index = 0;
    var interval_instance;
    var elm = document.querySelector('#cabc')

    function Write(){
        var text = sentence[part].substring(0, part_index + 1)
        elm.innerHTML = text;
        part_index++;

        if(text === sentence[part]){
            clearInterval(interval_instance);
            setTimeout(function(){
                interval_instance = setInterval(Delete, 25)
            }, 1000)
        }
    }

    function Delete() {
        var text = sentence[part].substring(0, part_index - 1)
        elm.innerHTML = text;
        part_index--;

        if(text === ''){
            clearInterval(interval_instance);

            if(part == (sentence.length - 1))
                part = 0;
            else 
                part++;
                
                part_index = 0;
            

            setTimeout(function(){
                interval_instance = setInterval(Write, 85)
            }, 400);
        }
    }
    interval_instance = setInterval(Write, 85)
</script>


